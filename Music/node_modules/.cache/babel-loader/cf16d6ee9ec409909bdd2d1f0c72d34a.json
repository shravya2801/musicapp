{"ast":null,"code":"import _classCallCheck from \"C:\\\\project\\\\MusicAppMERN-master\\\\MusicAppMERN-master\\\\Music\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\project\\\\MusicAppMERN-master\\\\MusicAppMERN-master\\\\Music\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\project\\\\MusicAppMERN-master\\\\MusicAppMERN-master\\\\Music\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\project\\\\MusicAppMERN-master\\\\MusicAppMERN-master\\\\Music\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\project\\\\MusicAppMERN-master\\\\MusicAppMERN-master\\\\Music\\\\src\\\\components\\\\PlaylistSelectorView\\\\PlaylistSelectorView.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\nimport CoverArt from '../CoverArt';\nimport Loading from '../Loading';\nimport { Header, Wrapper } from './styled';\nimport { gridTemplateColumns, rootUrl } from '../../variables';\n\nvar PlaylistSelectorView = /*#__PURE__*/function (_Component) {\n  _inherits(PlaylistSelectorView, _Component);\n\n  var _super = _createSuper(PlaylistSelectorView);\n\n  function PlaylistSelectorView() {\n    var _this;\n\n    _classCallCheck(this, PlaylistSelectorView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.handleClick = function (href, playClicked) {\n      var _this$props = _this.props,\n          activePlaylistHref = _this$props.activePlaylistHref,\n          history = _this$props.history,\n          isPaused = _this$props.isPaused,\n          isPlaying = _this$props.isPlaying,\n          setPause = _this$props.setPause,\n          unpause = _this$props.unpause;\n\n      if (playClicked) {\n        if (isPlaying && href === activePlaylistHref) {\n          return isPaused ? unpause() : setPause();\n        } else {\n          return _this.props.config.initPlay(href);\n        }\n      }\n\n      if (history) {\n        return history.push(\"/\".concat(href.replace(rootUrl + '/', '')));\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(PlaylistSelectorView, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var id = this.props.match.params.id;\n\n      if (!this.props.selection) {\n        return this.props.config.onMount(id);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var onUnmount = this.props.config.onUnmount;\n\n      if (onUnmount) {\n        onUnmount();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          selection = _this$props2.selection,\n          activePlaylistHref = _this$props2.activePlaylistHref,\n          isPaused = _this$props2.isPaused,\n          isPlaying = _this$props2.isPlaying,\n          message = _this$props2.message,\n          windowWidth = _this$props2.windowWidth;\n\n      if (!selection) {\n        return /*#__PURE__*/React.createElement(Loading, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 14\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      }, message), /*#__PURE__*/React.createElement(Wrapper, {\n        template: gridTemplateColumns(windowWidth),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }\n      }, selection.map(function (item) {\n        if (!item.images.length) {\n          return null;\n        }\n\n        return /*#__PURE__*/React.createElement(CoverArt, {\n          key: item.id,\n          handleClick: _this2.handleClick,\n          href: item.href,\n          icon: item.images[0].url,\n          id: item.id,\n          name: item.name,\n          showPlayBtn: activePlaylistHref === item.href && isPlaying && !isPaused,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }\n        });\n      })));\n    }\n  }]);\n\n  return PlaylistSelectorView;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state, props) {\n  return {\n    activePlaylistHref: state.playlist.href,\n    isPaused: state.isPaused,\n    isPlaying: state.isPlaying,\n    message: state.sectionMessage || props.config.sectionMessage,\n    selection: state[props.config.selection]\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setPause: function setPause() {\n      dispatch(actions.setPause());\n    },\n    unpause: function unpause() {\n      dispatch(actions.unpause());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlaylistSelectorView);","map":{"version":3,"sources":["C:/project/MusicAppMERN-master/MusicAppMERN-master/Music/src/components/PlaylistSelectorView/PlaylistSelectorView.js"],"names":["React","Component","connect","actions","CoverArt","Loading","Header","Wrapper","gridTemplateColumns","rootUrl","PlaylistSelectorView","handleClick","href","playClicked","props","activePlaylistHref","history","isPaused","isPlaying","setPause","unpause","config","initPlay","push","replace","id","match","params","selection","onMount","onUnmount","message","windowWidth","map","item","images","length","url","name","mapStateToProps","state","playlist","sectionMessage","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport * as actions from '../../actions';\n\nimport CoverArt from '../CoverArt';\nimport Loading from '../Loading';\nimport { Header, Wrapper } from './styled';\n\nimport { gridTemplateColumns, rootUrl } from '../../variables';\n\nclass PlaylistSelectorView extends Component {\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    if (!this.props.selection) {\n      return this.props.config.onMount(id);\n    }\n  }\n\n  componentWillUnmount() {\n    const { onUnmount } = this.props.config;\n    if (onUnmount) {\n      onUnmount();\n    }\n  }\n\n  handleClick = (href, playClicked) => {\n    const {\n      activePlaylistHref,\n      history,\n      isPaused,\n      isPlaying,\n      setPause,\n      unpause,\n    } = this.props;\n\n    if (playClicked) {\n      if (isPlaying && href === activePlaylistHref) {\n        return isPaused ? unpause() : setPause();\n      } else {\n        return this.props.config.initPlay(href);\n      }\n    }\n\n    if (history) {\n      return history.push(`/${href.replace(rootUrl + '/', '')}`);\n    }\n  };\n\n  render() {\n    const {\n      selection,\n      activePlaylistHref,\n      isPaused,\n      isPlaying,\n      message,\n      windowWidth,\n    } = this.props;\n\n    if (!selection) {\n      return <Loading />;\n    }\n\n    return (\n      <React.Fragment>\n        <Header>{message}</Header>\n        <Wrapper template={gridTemplateColumns(windowWidth)}>\n          {selection.map(item => {\n            if (!item.images.length) {\n              return null;\n            }\n            return (\n              <CoverArt\n                key={item.id}\n                handleClick={this.handleClick}\n                href={item.href}\n                icon={item.images[0].url}\n                id={item.id}\n                name={item.name}\n                showPlayBtn={\n                  activePlaylistHref === item.href && isPlaying && !isPaused\n                }\n              />\n            );\n          })}\n        </Wrapper>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state, props) => ({\n  activePlaylistHref: state.playlist.href,\n  isPaused: state.isPaused,\n  isPlaying: state.isPlaying,\n  message: state.sectionMessage || props.config.sectionMessage,\n  selection: state[props.config.selection],\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setPause: () => {\n    dispatch(actions.setPause());\n  },\n  unpause: () => {\n    dispatch(actions.unpause());\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PlaylistSelectorView);\n"]},"metadata":{},"sourceType":"module"}