{"ast":null,"code":"import _classCallCheck from \"C:\\\\project\\\\MusicAppMERN-master\\\\MusicAppMERN-master\\\\Music\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\project\\\\MusicAppMERN-master\\\\MusicAppMERN-master\\\\Music\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\project\\\\MusicAppMERN-master\\\\MusicAppMERN-master\\\\Music\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\project\\\\MusicAppMERN-master\\\\MusicAppMERN-master\\\\Music\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\project\\\\MusicAppMERN-master\\\\MusicAppMERN-master\\\\Music\\\\src\\\\components\\\\PlaylistView\\\\PlaylistView.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\nimport CoverArt from '../CoverArt';\nimport PlaylistPlayButton from '../PlaylistPlayButton';\nimport TrackContainer from '../../containers/TrackContainer';\nimport Loading from '../Loading';\nimport { DescriptionWrapper, InfoBox, Text, TracksWrapper, Wrapper } from './styled';\nimport { rootUrl } from '../../variables';\n\nvar PlaylistView = /*#__PURE__*/function (_Component) {\n  _inherits(PlaylistView, _Component);\n\n  var _super = _createSuper(PlaylistView);\n\n  function PlaylistView() {\n    var _this;\n\n    _classCallCheck(this, PlaylistView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.handleButton = function () {\n      var _this$props = _this.props,\n          isPaused = _this$props.isPaused,\n          isPlaying = _this$props.isPlaying,\n          isActivePlaylist = _this$props.isActivePlaylist,\n          setPause = _this$props.setPause,\n          unpause = _this$props.unpause,\n          startPlay = _this$props.startPlay;\n\n      if (isActivePlaylist && isPlaying && !isPaused) {\n        return setPause();\n      }\n\n      if (isActivePlaylist && isPlaying && isPaused) {\n        return unpause();\n      }\n\n      if (!isActivePlaylist) {\n        return startPlay();\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(PlaylistView, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchPlaylistView(this.props.currentPlaylistHref);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.clearPlaylistView();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          activePlaylistHref = _this$props2.activePlaylistHref,\n          activeTrackId = _this$props2.activeTrackId,\n          currentPlaylistHref = _this$props2.currentPlaylistHref,\n          isPaused = _this$props2.isPaused,\n          isPlaying = _this$props2.isPlaying,\n          playlist = _this$props2.playlist,\n          setPause = _this$props2.setPause,\n          startPlay = _this$props2.startPlay,\n          tracklist = _this$props2.tracklist,\n          isActivePlaylist = _this$props2.isActivePlaylist;\n\n      if (!tracklist) {\n        return /*#__PURE__*/React.createElement(Loading, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 14\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(Wrapper, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(DescriptionWrapper, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(CoverArt, {\n        handleClick: this.handleButton,\n        icon: playlist.imageUrl,\n        id: currentPlaylistHref,\n        href: currentPlaylistHref,\n        name: playlist.name,\n        showPlayBtn: activePlaylistHref === currentPlaylistHref && isPlaying && !isPaused,\n        bigTitle: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(InfoBox, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Text, {\n        dangerouslySetInnerHTML: {\n          __html: playlist.description\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }\n      }, tracklist.length, \" song\", tracklist.length > 1 ? 's' : ''), /*#__PURE__*/React.createElement(PlaylistPlayButton, {\n        isPlaying: isActivePlaylist && isPlaying && !isPaused,\n        onClick: this.handleButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }\n      }))), /*#__PURE__*/React.createElement(TracksWrapper, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }\n      }, tracklist.map(function (_ref, i) {\n        var track = _ref.track;\n        return /*#__PURE__*/React.createElement(TrackContainer, {\n          key: track.id,\n          artists: track.artists,\n          nr: +i,\n          track: track,\n          playlistId: playlist.id,\n          isPlaying: isPlaying && !isPaused,\n          isActiveTrack: isActivePlaylist && +i === activeTrackId,\n          playTrack: function playTrack() {\n            return startPlay(+i);\n          },\n          pauseTrack: function pauseTrack() {\n            return setPause();\n          },\n          unpause: _this2.props.unpause,\n          activeTrackId: isActivePlaylist ? activeTrackId : null,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }\n        });\n      })));\n    }\n  }]);\n\n  return PlaylistView;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state, props) {\n  return {\n    activePlaylistHref: state.playlist.href,\n    activeTrackId: state.activeTrackId,\n    currentPlaylistHref: rootUrl + props.history.location.pathname,\n    isActivePlaylist: state.playlist.href === rootUrl + props.history.location.pathname,\n    isPaused: state.isPaused,\n    isPlaying: state.isPlaying,\n    playlist: state.playlistView,\n    tracklist: state.tracklistView\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, getState) {\n  return {\n    clearPlaylistView: function clearPlaylistView() {\n      dispatch(actions.clearPlaylistView());\n    },\n    fetchPlaylistView: function fetchPlaylistView(href) {\n      dispatch(actions.fetchPlaylistView(href));\n    },\n    setPause: function setPause() {\n      dispatch(actions.setPause());\n    },\n    startPlay: function startPlay(track) {\n      dispatch(actions.startPlayFromTracklist(track));\n    },\n    unpause: function unpause() {\n      dispatch(actions.unpause());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlaylistView);","map":{"version":3,"sources":["C:/project/MusicAppMERN-master/MusicAppMERN-master/Music/src/components/PlaylistView/PlaylistView.js"],"names":["React","Component","connect","actions","CoverArt","PlaylistPlayButton","TrackContainer","Loading","DescriptionWrapper","InfoBox","Text","TracksWrapper","Wrapper","rootUrl","PlaylistView","handleButton","props","isPaused","isPlaying","isActivePlaylist","setPause","unpause","startPlay","fetchPlaylistView","currentPlaylistHref","clearPlaylistView","activePlaylistHref","activeTrackId","playlist","tracklist","imageUrl","name","__html","description","length","map","i","track","id","artists","mapStateToProps","state","href","history","location","pathname","playlistView","tracklistView","mapDispatchToProps","dispatch","getState","startPlayFromTracklist"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport * as actions from '../../actions';\n\nimport CoverArt from '../CoverArt';\nimport PlaylistPlayButton from '../PlaylistPlayButton';\nimport TrackContainer from '../../containers/TrackContainer';\nimport Loading from '../Loading';\nimport {\n  DescriptionWrapper,\n  InfoBox,\n  Text,\n  TracksWrapper,\n  Wrapper,\n} from './styled';\n\nimport { rootUrl } from '../../variables';\n\nclass PlaylistView extends Component {\n  componentDidMount() {\n    this.props.fetchPlaylistView(this.props.currentPlaylistHref);\n  }\n\n  componentWillUnmount() {\n    this.props.clearPlaylistView();\n  }\n\n  handleButton = () => {\n    const {\n      isPaused,\n      isPlaying,\n      isActivePlaylist,\n      setPause,\n      unpause,\n      startPlay,\n    } = this.props;\n    if (isActivePlaylist && isPlaying && !isPaused) {\n      return setPause();\n    }\n    if (isActivePlaylist && isPlaying && isPaused) {\n      return unpause();\n    }\n    if (!isActivePlaylist) {\n      return startPlay();\n    }\n  };\n\n  render() {\n    const {\n      activePlaylistHref,\n      activeTrackId,\n      currentPlaylistHref,\n      isPaused,\n      isPlaying,\n      playlist,\n      setPause,\n      startPlay,\n      tracklist,\n      isActivePlaylist,\n    } = this.props;\n\n    if (!tracklist) {\n      return <Loading />;\n    }\n\n    return (\n      <Wrapper>\n        <DescriptionWrapper>\n          <CoverArt\n            handleClick={this.handleButton}\n            icon={playlist.imageUrl}\n            id={currentPlaylistHref}\n            href={currentPlaylistHref}\n            name={playlist.name}\n            showPlayBtn={\n              activePlaylistHref === currentPlaylistHref &&\n              isPlaying &&\n              !isPaused\n            }\n            bigTitle={true}\n          />\n          <InfoBox>\n            <Text dangerouslySetInnerHTML={{ __html: playlist.description }} />\n            <Text>\n              {tracklist.length} song{tracklist.length > 1 ? 's' : ''}\n            </Text>\n            <PlaylistPlayButton\n              isPlaying={isActivePlaylist && isPlaying && !isPaused}\n              onClick={this.handleButton}\n            />\n          </InfoBox>\n        </DescriptionWrapper>\n        <TracksWrapper>\n          {tracklist.map(({ track }, i) => {\n            return (\n              <TrackContainer\n                key={track.id}\n                artists={track.artists}\n                nr={+i}\n                track={track}\n                playlistId={playlist.id}\n                isPlaying={isPlaying && !isPaused}\n                isActiveTrack={isActivePlaylist && +i === activeTrackId}\n                playTrack={() => startPlay(+i)}\n                pauseTrack={() => setPause()}\n                unpause={this.props.unpause}\n                activeTrackId={isActivePlaylist ? activeTrackId : null}\n              />\n            );\n          })}\n        </TracksWrapper>\n      </Wrapper>\n    );\n  }\n}\n\nconst mapStateToProps = (state, props) => ({\n  activePlaylistHref: state.playlist.href,\n  activeTrackId: state.activeTrackId,\n  currentPlaylistHref: rootUrl + props.history.location.pathname,\n  isActivePlaylist:\n    state.playlist.href === rootUrl + props.history.location.pathname,\n  isPaused: state.isPaused,\n  isPlaying: state.isPlaying,\n  playlist: state.playlistView,\n  tracklist: state.tracklistView,\n});\n\nconst mapDispatchToProps = (dispatch, getState) => ({\n  clearPlaylistView: () => {\n    dispatch(actions.clearPlaylistView());\n  },\n  fetchPlaylistView: href => {\n    dispatch(actions.fetchPlaylistView(href));\n  },\n  setPause: () => {\n    dispatch(actions.setPause());\n  },\n  startPlay: track => {\n    dispatch(actions.startPlayFromTracklist(track));\n  },\n  unpause: () => {\n    dispatch(actions.unpause());\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PlaylistView);\n"]},"metadata":{},"sourceType":"module"}