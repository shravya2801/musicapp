{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\MusicAppMERN-master\\\\MusicAppMERN-master\\\\Music\\\\src\\\\components\\\\TrackControlButton\\\\TrackControlButton.tsx\",\n    _this = this;\n\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPause, faPlay, faVolumeUp } from '@fortawesome/free-solid-svg-icons';\nimport { Wrapper } from './styled';\nvar playIcon = /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n  icon: faPlay,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 18\n  }\n});\nvar pauseIcon = /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n  icon: faPause,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 19\n  }\n});\nvar speakerIcon = /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n  icon: faVolumeUp,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 21\n  }\n});\n\nvar TrackControlButton = function TrackControlButton(_ref) {\n  var handlePause = _ref.handlePause,\n      handlePlay = _ref.handlePlay,\n      hasPreview = _ref.hasPreview,\n      isActive = _ref.isActive,\n      isHovered = _ref.isHovered,\n      isPlaying = _ref.isPlaying,\n      nr = _ref.nr,\n      unpause = _ref.unpause;\n  var cursorStyle = 'default';\n  var showIcon = hasPreview && (isHovered || isPlaying);\n  var icon = null;\n\n  if (hasPreview) {\n    cursorStyle = 'pointer';\n\n    if (isHovered && isPlaying) {\n      icon = pauseIcon;\n    } else if (isHovered && !isPlaying) {\n      icon = playIcon;\n    } else if (isPlaying) {\n      icon = speakerIcon;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    style: {\n      cursor: cursorStyle\n    },\n    onClick: !isActive ? handlePlay : isPlaying ? handlePause : unpause,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, showIcon ? icon : ++nr + '.');\n};\n\nexport default TrackControlButton;","map":{"version":3,"sources":["C:/project/MusicAppMERN-master/MusicAppMERN-master/Music/src/components/TrackControlButton/TrackControlButton.tsx"],"names":["React","FontAwesomeIcon","faPause","faPlay","faVolumeUp","Wrapper","playIcon","pauseIcon","speakerIcon","TrackControlButton","handlePause","handlePlay","hasPreview","isActive","isHovered","isPlaying","nr","unpause","cursorStyle","showIcon","icon","cursor"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,OAAT,EAAkBC,MAAlB,EAA0BC,UAA1B,QAA4C,mCAA5C;AAEA,SAASC,OAAT,QAAwB,UAAxB;AAEA,IAAMC,QAAQ,gBAAG,oBAAC,eAAD;AAAiB,EAAA,IAAI,EAAEH,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAjB;AACA,IAAMI,SAAS,gBAAG,oBAAC,eAAD;AAAiB,EAAA,IAAI,EAAEL,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAlB;AACA,IAAMM,WAAW,gBAAG,oBAAC,eAAD;AAAiB,EAAA,IAAI,EAAEJ,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAApB;;AAaA,IAAMK,kBAAqC,GAAG,SAAxCA,kBAAwC,OASxC;AAAA,MARJC,WAQI,QARJA,WAQI;AAAA,MAPJC,UAOI,QAPJA,UAOI;AAAA,MANJC,UAMI,QANJA,UAMI;AAAA,MALJC,QAKI,QALJA,QAKI;AAAA,MAJJC,SAII,QAJJA,SAII;AAAA,MAHJC,SAGI,QAHJA,SAGI;AAAA,MAFJC,EAEI,QAFJA,EAEI;AAAA,MADJC,OACI,QADJA,OACI;AACJ,MAAIC,WAAW,GAAG,SAAlB;AACA,MAAMC,QAAQ,GAAGP,UAAU,KAAKE,SAAS,IAAIC,SAAlB,CAA3B;AACA,MAAIK,IAAI,GAAG,IAAX;;AAEA,MAAIR,UAAJ,EAAgB;AACdM,IAAAA,WAAW,GAAG,SAAd;;AACA,QAAIJ,SAAS,IAAIC,SAAjB,EAA4B;AAC1BK,MAAAA,IAAI,GAAGb,SAAP;AACD,KAFD,MAEO,IAAIO,SAAS,IAAI,CAACC,SAAlB,EAA6B;AAClCK,MAAAA,IAAI,GAAGd,QAAP;AACD,KAFM,MAEA,IAAIS,SAAJ,EAAe;AACpBK,MAAAA,IAAI,GAAGZ,WAAP;AACD;AACF;;AAED,sBACE,oBAAC,OAAD;AACE,IAAA,KAAK,EAAE;AAAEa,MAAAA,MAAM,EAAEH;AAAV,KADT;AAEE,IAAA,OAAO,EAAE,CAACL,QAAD,GAAYF,UAAZ,GAAyBI,SAAS,GAAGL,WAAH,GAAiBO,OAF9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGE,QAAQ,GAAGC,IAAH,GAAU,EAAEJ,EAAF,GAAO,GAJ5B,CADF;AAQD,CAjCD;;AAmCA,eAAeP,kBAAf","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPause, faPlay, faVolumeUp } from '@fortawesome/free-solid-svg-icons';\n\nimport { Wrapper } from './styled';\n\nconst playIcon = <FontAwesomeIcon icon={faPlay} />;\nconst pauseIcon = <FontAwesomeIcon icon={faPause} />;\nconst speakerIcon = <FontAwesomeIcon icon={faVolumeUp} />;\n\nexport interface IProps {\n  handlePause: () => void;\n  handlePlay: () => void;\n  hasPreview: boolean;\n  isActive: boolean;\n  isHovered: boolean;\n  isPlaying: boolean;\n  nr: number;\n  unpause: () => void;\n}\n\nconst TrackControlButton: React.SFC<IProps> = ({\n  handlePause,\n  handlePlay,\n  hasPreview,\n  isActive,\n  isHovered,\n  isPlaying,\n  nr,\n  unpause,\n}) => {\n  let cursorStyle = 'default';\n  const showIcon = hasPreview && (isHovered || isPlaying);\n  let icon = null;\n\n  if (hasPreview) {\n    cursorStyle = 'pointer';\n    if (isHovered && isPlaying) {\n      icon = pauseIcon;\n    } else if (isHovered && !isPlaying) {\n      icon = playIcon;\n    } else if (isPlaying) {\n      icon = speakerIcon;\n    }\n  }\n\n  return (\n    <Wrapper\n      style={{ cursor: cursorStyle }}\n      onClick={!isActive ? handlePlay : isPlaying ? handlePause : unpause}\n    >\n      {showIcon ? icon : ++nr + '.'}\n    </Wrapper>\n  );\n};\n\nexport default TrackControlButton;\n"]},"metadata":{},"sourceType":"module"}