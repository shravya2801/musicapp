{"ast":null,"code":"import _toConsumableArray from \"C:\\\\project\\\\MusicAppMERN-master\\\\MusicAppMERN-master\\\\Music\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\project\\\\MusicAppMERN-master\\\\MusicAppMERN-master\\\\Music\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport * as types from '../actions/action-types';\nvar initState = {\n  activeTrackId: -1,\n  categoryPlaylist: null,\n  featured: null,\n  genres: [],\n  isPaused: false,\n  isPlaying: false,\n  newReleases: null,\n  playlist: {},\n  playlistView: {},\n  sectionMessage: null,\n  token: null,\n  tracklist: null,\n  tracklistView: null\n};\n\nvar playReducer = function playReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.PLAY_NEXT_TRACK:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        activeTrackId: action.activeTrackId,\n        isPaused: false,\n        isPlaying: true\n      });\n\n    case types.STOP_TRACK:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isPaused: false,\n          isPlaying: false\n        });\n      }\n\n    case types.TOKEN_SET:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        token: action.token\n      });\n\n    case types.FEATURED_SET:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        featured: action.featured,\n        sectionMessage: action.sectionMessage,\n        tracklist: action.tracklist\n      });\n\n    case types.GENRES_SET:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        genres: action.genres\n      });\n\n    case types.NEW_RELEASES_SET:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        newReleases: action.albums,\n        sectionMessage: null\n      });\n\n    case types.CATEGORY_PLAYLIST_SET:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        categoryPlaylist: action.categoryPlaylist\n      });\n\n    case types.CATEGORY_PLAYLIST_CLEAR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        categoryPlaylist: null\n      });\n\n    case types.ALBUM_UPDATE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        activeTrackId: action.activeTrackId,\n        isPaused: false,\n        isPlaying: true,\n        playlist: _objectSpread(_objectSpread({}, state.playlist), action.playlist),\n        tracklist: action.tracks\n      });\n\n    case types.PLAYLIST_SET:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        activeTrackId: action.trackId,\n        isPaused: false,\n        isPlaying: true,\n        playlist: _objectSpread(_objectSpread({}, state.playlist), action.playlist),\n        tracklist: _toConsumableArray(action.tracks)\n      });\n\n    case types.PLAY_TRACK:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        activeTrackId: action.trackId,\n        isPaused: false,\n        isPlaying: true\n      });\n\n    case types.SET_PAUSE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isPaused: true,\n        isPlaying: true\n      });\n\n    case types.COPY_TO_VIEW:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        playlistView: _objectSpread({}, state.playlist),\n        tracklistView: _toConsumableArray(state.tracklist)\n      });\n\n    case types.COPY_FROM_VIEW_AND_PLAY:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        activeTrackId: action.trackId,\n        isPaused: false,\n        isPlaying: true,\n        playlist: _objectSpread({}, state.playlistView),\n        tracklist: _toConsumableArray(state.tracklistView)\n      });\n\n    case types.CLEAR_PLAYLIST_VIEW:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        playlistView: {},\n        tracklistView: null\n      });\n\n    case types.UNPAUSE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isPaused: false,\n        isPlaying: true\n      });\n\n    case types.SET_PLAYLIST_VIEW:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        playlistView: _objectSpread({}, action.playlist),\n        tracklistView: _toConsumableArray(action.tracks)\n      });\n\n    case types.STOP_PLAY:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        activeTrackId: -1,\n        isPaused: false,\n        isPlaying: false,\n        playlist: {},\n        tracklist: null\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default playReducer;","map":{"version":3,"sources":["C:/project/MusicAppMERN-master/MusicAppMERN-master/Music/src/reducers/index.js"],"names":["types","initState","activeTrackId","categoryPlaylist","featured","genres","isPaused","isPlaying","newReleases","playlist","playlistView","sectionMessage","token","tracklist","tracklistView","playReducer","state","action","type","PLAY_NEXT_TRACK","STOP_TRACK","TOKEN_SET","FEATURED_SET","GENRES_SET","NEW_RELEASES_SET","albums","CATEGORY_PLAYLIST_SET","CATEGORY_PLAYLIST_CLEAR","ALBUM_UPDATE","tracks","PLAYLIST_SET","trackId","PLAY_TRACK","SET_PAUSE","COPY_TO_VIEW","COPY_FROM_VIEW_AND_PLAY","CLEAR_PLAYLIST_VIEW","UNPAUSE","SET_PLAYLIST_VIEW","STOP_PLAY"],"mappings":"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","sourcesContent":["import * as types from '../actions/action-types';\n\nconst initState = {\n  activeTrackId: -1,\n  categoryPlaylist: null,\n  featured: null,\n  genres: [],\n  isPaused: false,\n  isPlaying: false,\n  newReleases: null,\n  playlist: {},\n  playlistView: {},\n  sectionMessage: null,\n  token: null,\n  tracklist: null,\n  tracklistView: null,\n};\n\nconst playReducer = (state = initState, action) => {\n  switch (action.type) {\n    case types.PLAY_NEXT_TRACK:\n      return {\n        ...state,\n        activeTrackId: action.activeTrackId,\n        isPaused: false,\n        isPlaying: true,\n      };\n\n    case types.STOP_TRACK: {\n      return {\n        ...state,\n        isPaused: false,\n        isPlaying: false,\n      };\n    }\n\n    case types.TOKEN_SET:\n      return {\n        ...state,\n        token: action.token,\n      };\n\n    case types.FEATURED_SET:\n      return {\n        ...state,\n        featured: action.featured,\n        sectionMessage: action.sectionMessage,\n        tracklist: action.tracklist,\n      };\n\n    case types.GENRES_SET:\n      return {\n        ...state,\n        genres: action.genres,\n      };\n\n    case types.NEW_RELEASES_SET:\n      return {\n        ...state,\n        newReleases: action.albums,\n        sectionMessage: null,\n      };\n\n    case types.CATEGORY_PLAYLIST_SET:\n      return {\n        ...state,\n        categoryPlaylist: action.categoryPlaylist,\n      };\n\n    case types.CATEGORY_PLAYLIST_CLEAR:\n      return {\n        ...state,\n        categoryPlaylist: null,\n      };\n\n    case types.ALBUM_UPDATE:\n      return {\n        ...state,\n        activeTrackId: action.activeTrackId,\n        isPaused: false,\n        isPlaying: true,\n        playlist: {\n          ...state.playlist,\n          ...action.playlist,\n        },\n        tracklist: action.tracks,\n      };\n\n    case types.PLAYLIST_SET:\n      return {\n        ...state,\n        activeTrackId: action.trackId,\n        isPaused: false,\n        isPlaying: true,\n        playlist: {\n          ...state.playlist,\n          ...action.playlist,\n        },\n        tracklist: [...action.tracks],\n      };\n\n    case types.PLAY_TRACK:\n      return {\n        ...state,\n        activeTrackId: action.trackId,\n        isPaused: false,\n        isPlaying: true,\n      };\n\n    case types.SET_PAUSE:\n      return {\n        ...state,\n        isPaused: true,\n        isPlaying: true,\n      };\n\n    case types.COPY_TO_VIEW:\n      return {\n        ...state,\n        playlistView: { ...state.playlist },\n        tracklistView: [...state.tracklist],\n      };\n\n    case types.COPY_FROM_VIEW_AND_PLAY:\n      return {\n        ...state,\n        activeTrackId: action.trackId,\n        isPaused: false,\n        isPlaying: true,\n        playlist: { ...state.playlistView },\n        tracklist: [...state.tracklistView],\n      };\n\n    case types.CLEAR_PLAYLIST_VIEW:\n      return {\n        ...state,\n        playlistView: {},\n        tracklistView: null,\n      };\n\n    case types.UNPAUSE:\n      return {\n        ...state,\n        isPaused: false,\n        isPlaying: true,\n      };\n\n    case types.SET_PLAYLIST_VIEW:\n      return {\n        ...state,\n        playlistView: { ...action.playlist },\n        tracklistView: [...action.tracks],\n      };\n\n    case types.STOP_PLAY:\n      return {\n        ...state,\n        activeTrackId: -1,\n        isPaused: false,\n        isPlaying: false,\n        playlist: {},\n        tracklist: null,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default playReducer;\n"]},"metadata":{},"sourceType":"module"}